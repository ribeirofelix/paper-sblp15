% This file was created with JabRef 2.10.
% Encoding: UTF8


@InProceedings{Bawden1999quasiquotation,
  Title                    = {Quasiquotation in {Lisp}},
  Author                   = {Bawden, Alan and others},
  Booktitle                = {PEPM},
  Year                     = {1999},
  Organization             = {Citeseer},
  Pages                    = {4--12}
}

@InProceedings{Calcagno2003implementing,
  Title                    = {Implementing multi-stage languages using {AST}s, gensym, and reflection},
  Author                   = {Calcagno, Cristiano and Taha, Walid and Huang, Liwen and Leroy, Xavier},
  Booktitle                = {Generative Programming and Component Engineering},
  Year                     = {2003},
  Organization             = {Springer},
  Pages                    = {57--76}
}

@InCollection{Czarnecki2004DSL,
  Title                    = {{DSL} implementation in {MetaOCaml}, {Template Haskell}, and {C++}},
  Author                   = {Czarnecki, Krzysztof and O’Donnell, John T and Striegnitz, J{\"o}rg and Taha, Walid},
  Booktitle                = {Domain-Specific Program Generation},
  Publisher                = {Springer},
  Year                     = {2004},
  Pages                    = {51--72}
}

@InProceedings{DeVito2013Terra,
  Title                    = {Terra: A Multi-stage Language for High-performance Computing},
  Author                   = {DeVito, Zachary and Hegarty, James and Aiken, Alex and Hanrahan, Pat and Vitek, Jan},
  Booktitle                = {Proceedings of the 34th ACM SIGPLAN Conference on Programming Language Design and Implementation},
  Year                     = {2013},

  Address                  = {New York, NY, USA},
  Pages                    = {105--116},
  Publisher                = {ACM},
  Series                   = {PLDI '13},

  Acmid                    = {2462166},
  Doi                      = {10.1145/2491956.2462166},
  ISBN                     = {978-1-4503-2014-6},
  Keywords                 = {dsl, lua, staged computation},
  Location                 = {Seattle, Washington, USA},
  Numpages                 = {12},
  Url                      = {http://doi.acm.org/10.1145/2491956.2462166}
}

@Misc{metalua,
  Title                    = {{Metalua}: Static meta-programming for {Lua}},

  Author                   = {Fleutot, Fabien},
  HowPublished             = {\url{https://github.com/fab13n/metalua}},
  Note                     = {[Visited on February 2015]},
  Year                     = {2007}
}

@InProceedings{Fleutot2007contrasting,
  Title                    = {Contrasting compile-time meta-programming in {Metalua} and {Converge}},
  Author                   = {Fleutot, Fabien and Tratt, Laurence},
  Booktitle                = {Proceedings of the Workshop on Dynamic Languages and Applications},
  Year                     = {2007}
}

@Book{Fowler:2010:DSL:1809745,
  Title                    = {Domain Specific Languages},
  Author                   = {Fowler, Martin},
  ISBN                     = {0321712943, 9780321712943},
  Publisher                = {Addison-Wesley Professional},
  Year                     = {2010},
  Edition                  = {1st},

  Abstract                 = {Designed as a wide-ranging guide to Domain Specific Languages (DSLs) and how to approach building them, this book covers a variety of different techniques available for DSLs. The goal is to provide readers with enough information to make an informed choice about whether or not to use a DSL and what kinds of DSL techniques to employ. Part I is a 150-page narrative overview that gives you a broad understanding of general principles. The reference material in Parts II through VI provides the details and examples you willneed to get started using the various techniques discussed. Both internal and external DSL topics are covered, in addition to alternative computational models and code generation. Although the general principles and patterns presented can be used with whatever programming language you happen to be using, most of the examples are in Java or C#.},
  Owner                    = {hisham},
  Review                   = {Makes the distinction between external and internal DSLs.
Internal DSLs are "fluent APIs": APIs designed to make you feel like you're programming a different language.
Presents a "DSL zoo" (a chapter with a selection of DSLs)
Teaches various classic interpreter and compiler writing techniques, for programmers with no background in PL theory.},
  Timestamp                = {2014-12-11}
}

@Book{Ierusalimschy2006PIL,
  Title                    = {Programming in Lua, Second Edition},
  Author                   = {Ierusalimschy, Roberto},
  ISBN                     = {8590379825},
  Publisher                = {Lua.Org},
  Year                     = {2006}
}

@InProceedings{Kameyama2008CSS,
  Title                    = {Closing the Stage: From Staged Code to Typed Closures},
  Author                   = {Kameyama, Yukiyoshi and Kiselyov, Oleg and Shan, Chung-chieh},
  Booktitle                = {Proceedings of the 2008 ACM SIGPLAN Symposium on Partial Evaluation and Semantics-based Program Manipulation},
  Year                     = {2008},

  Address                  = {New York, NY, USA},
  Pages                    = {147--157},
  Publisher                = {ACM},
  Series                   = {PEPM '08},

  Acmid                    = {1328430},
  Doi                      = {10.1145/1328408.1328430},
  ISBN                     = {978-1-59593-977-7},
  Keywords                 = {closures, multistage programming, mutable state and control effects, parametric polymorphism, type abstraction},
  Location                 = {San Francisco, California, USA},
  Numpages                 = {11},
  Url                      = {http://doi.acm.org/10.1145/1328408.1328430}
}

@Misc{lua-parser,
  Title                    = {{lua-parser}: a {Lua} 5.3 parser written with {LPeg}},

  Author                   = {André Murbach Maidl},
  HowPublished             = {\url{https://github.com/andremm/lua-parser}},
  Note                     = {[Visited on April 2015]},
  Year                     = {2013}
}

@Article{McCarthy1960RFS,
  Title                    = {Recursive Functions of Symbolic Expressions and Their Computation by Machine, Part I},
  Author                   = {McCarthy, John},
  Journal                  = {Communications of ACM},
  Year                     = {1960},

  Month                    = apr,
  Number                   = {4},
  Pages                    = {184--195},
  Volume                   = {3},

  Acmid                    = {367199},
  Address                  = {New York, NY, USA},
  Doi                      = {10.1145/367177.367199},
  ISSN                     = {0001-0782},
  Issue_date               = {April 1960},
  Numpages                 = {12},
  Publisher                = {ACM},
  Url                      = {http://doi.acm.org/10.1145/367177.367199}
}

@Misc{linq,
  Title                    = {{LINQ}},

  Author                   = {Microsoft},
  HowPublished             = {\url{https://msdn.microsoft.com/en-us/library/bb397926.aspx}},
  Note                     = {[Visited on April 2015]},
  Year                     = {2013}
}

@Misc{LuaDec,
  Title                    = {{LuaDec}: a decompiler for the {Lua} language},

  Author                   = {Hisham Muhammad},
  HowPublished             = {\url{http://luadec.luaforge.net/}},
  Note                     = {[Visited on April 2015]},
  Year                     = {2006}
}

@InCollection{Taha2008gentle,
  Title                    = {A gentle introduction to multi-stage programming, part {II}},
  Author                   = {Taha, Walid},
  Booktitle                = {Generative and Transformational Techniques in Software Engineering II},
  Publisher                = {Springer},
  Year                     = {2008},
  Pages                    = {260--290}
}

@InCollection{Taha2004gentle,
  Title                    = {A gentle introduction to multi-stage programming},
  Author                   = {Taha, Walid},
  Booktitle                = {Domain-Specific Program Generation},
  Publisher                = {Springer},
  Year                     = {2004},
  Pages                    = {30--50}
}

@PhdThesis{Taha1999MSP,
  Title                    = {Multi-stage programming: Its theory and applications},
  Author                   = {Taha, Walid},
  School                   = {Oregon Graduate Institute of Science and Technology},
  Year                     = {1999}
}

@InProceedings{Westbrook2010Mint,
  Title                    = {Mint: {Java} Multi-stage Programming Using Weak Separability},
  Author                   = {Westbrook, Edwin and Ricken, Mathias and Inoue, Jun and Yao, Yilong and Abdelatif, Tamer and Taha, Walid},
  Booktitle                = {Proceedings of the 2010 ACM SIGPLAN Conference on Programming Language Design and Implementation},
  Year                     = {2010},

  Address                  = {New York, NY, USA},
  Pages                    = {400--411},
  Publisher                = {ACM},
  Series                   = {PLDI '10},

  Acmid                    = {1806642},
  Doi                      = {10.1145/1806596.1806642},
  ISBN                     = {978-1-4503-0019-3},
  Keywords                 = {java, multi-stage programming, multi-staged languages, type systems},
  Location                 = {Toronto, Ontario, Canada},
  Numpages                 = {12},
  Url                      = {http://doi.acm.org/10.1145/1806596.1806642}
}

